substitutions:
    
    # Working folders:
    _PROJECT_WORKING_DIR: '/workspace'
    _DIST_WORKING_DIR: '/workspace/dist'
    _DIST_REPO_SITE_DIR: '.'

steps:

# Create working directories
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    mkdir -p ${_PROJECT_WORKING_DIR}
    mkdir -p ${_DIST_WORKING_DIR}
    mkdir -p ${_PROJECT_WORKING_DIR}/${_FIREBASE_PUBLIC_DIR}

# Clone the firebase project repo (if the variable is not empty)
- name: 'gcr.io/cloud-builders/git'
  args:
  - 'clone'
  - '${_FIREBASE_HOSTING_PROJECT_REPO_HTTPS}'
  - 'tmp'

# Move the project files to workspace (git clone work around)
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    mv tmp/* ${_PROJECT_WORKING_DIR} && rm -rf tmp
    
# Clone the dist repo then get and set the last dist commit ID that is being used
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    git clone ${_DIST_REPO_HTTPS} tmp-dist
    echo $(git -C tmp-dist rev-parse --verify HEAD)
    echo $(basename "git rev-parse --show-toplevel")
    #get the commit sha and set in a file inside workspace
    
#- name: 'gcr.io/cloud-builders/git'
#  args:
#  - 'clone'
#  - '${_DIST_REPO_HTTPS}'
#  - 'tmp-dist'

# Move the dist files to the firebase public directory
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    mv tmp-dist/${_DIST_REPO_SITE_DIR}/* ${_PROJECT_WORKING_DIR}/${_FIREBASE_PUBLIC_DIR}
    rm -rf tmp-dist

# Move the dist files to the correct firebase public dir
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    ls -a ${_PROJECT_WORKING_DIR}/${_FIREBASE_PUBLIC_DIR}
    ls -a ${_PROJECT_WORKING_DIR}
    echo ${_FIREBASE_TOKEN}
    
# Deploy the project using the site specific, firebase hosting preload image

#- name: 'gcr.io/static-cloud-builders/firebase'
#  args: [ 'deploy', '--only', 'hosting', '--project', '${_FIREBASE_PROJECT_ID}', '--token', '${_FIREBASE_TOKEN}']

- name: 'gcr.io/static-cloud-builders/firebase'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    echo "do something here"
    firebase deploy --only hosting --project ${_FIREBASE_PROJECT_ID} --token ${_FIREBASE_TOKEN} --message "delpoying from ${_DIST_REPO_HTTPS}"
    
