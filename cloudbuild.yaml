options:

  substitution_option: 'ALLOW_LOOSE'
  

substitutions:
    
    # Working folders:
    _FIREBASE_WORKING_DIR: '/workspace/project'
    _DIST_WORKING_DIR: '/workspace/dist'

    # Dist repo:
    _DIST_REPO_SITE_DIR: './' # use as default
    #_DIST_REPO_HTTPS:  # must be set in build variables

    # Firebase specific:
    _FIREBASE_PUBLIC_DIR: 'app' # use as a default    
    #_FIREBASE_PROJECT_ID: # must be set in build variables  
    #_FIREBASE_TOKEN: # must be set in build variables
    #_FIREBASE_PROJECT_REPO_HTTPS: # can be empty 
    
    # For use with secrets:
    #_FIREBASE_TOKEN_ENC: 
    #_FIREBASE_TOKEN_KMS_KEY_NAME: 
    #_FIREBASE_TOKEN_KMS_KEYRING_NAME: 
    #_FIREBASE_TOKEN_KMS_SECRET_NAME:

    ## FOR TESTING:
    _FIREBASE_PROJECT_ID: 'with-mark-explore-static-sites'    
    _DIST_REPO_HTTPS: 'https://github.com/static-site-exploration/explote-static-distribution-example.tld'    
    _FIREBASE_TOKEN: '1/Pc6q5R0yW29SxP8CJgl1grUyZZV_bj0QMOhC9IJv1v7jR4r3g97WBy8dKeT402co'
    _FIREBASE_PROJECT_REPO_HTTPS: 'https://github.com/static-site-exploration/explore-static-firebase-hosting-example.tld.git'


#secrets:

#- kmsKeyName: projects/${PROJECT_ID}/locations/global/keyRings/${_FIREBASE_TOKEN_KMS_KEYRING_NAME}/cryptoKeys/${__FIREBASE_TOKEN_KMS_KEYRING_NAME}
#  secretEnv:
#    MY_SECRET: ${_FIREBASE_TOKEN_KMS_SECRET_NAME}


steps:

# Create working directories
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    mkdir -p ${_FIREBASE_WORKING_DIR}
    mkdir -p ${_DIST_WORKING_DIR}

# Clone the firebase project repo (if the variable is not empty)
- name: 'gcr.io/cloud-builders/git'
  args:
  - 'clone'
  - '${_FIREBASE_HOSTING_PROJECT_REPO}'
  - '${_FIREBASE_PROJECT_DIR}' # into folder (workspace/project)


# Clone the dist repo
- name: 'gcr.io/cloud-builders/git'
  args:
  - '-C'
  - '${_DIST_WORKING_DIR}'
  - 'clone'
  - '${_DIST_REPO}'
  - './'

# Move the dist files to the correct firebase public dir
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    cleanup(){mv ${_DIST_WORKING_DIR}/${_DIST_REPO_SITE_DIR}/* ${_FIREBASE_PROJECT_DIR}/${_FIREBASE_PUBLIC_DIR}; rm -rf ${_DIST_WORKING_DIR}/${_DIST_REPO_SITE_DIR}}
    if [ $THIS != "./" ]; then cleanup fi

# Deploy the project using the site specific, firebase hosting preload image
- name: 'gcr.io/static-cloud-builders/firebase'
  # bash
  args:
  - '-c'
  - '|'
  #- 'cat git repo shortname file' > $DIST_REPO_NAME
  #- 'cat git commit file' > $DIST_GIT_COMMIT 
  - '|'
  - 'deploy'
  - '-project'
  - '${_FIREBASE_PROJECT_DIR}'
  - '--token'
  - '$${_FIREBASE_TOKEN_KMS_SECRET_NAME}'
  - '--message'
  - 'delpoying git commit: from $DIST_REPO_NAME $DIST_GIT_COMMIT' ## NEED TO GET COMMIT ID FROM CLONE
  - '--only'
  - 'hosting'
  #secretEnv: ['_FIREBASE_TOKEN']
